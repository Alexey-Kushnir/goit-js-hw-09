{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAsCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA9CAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAEC,iBAEF,IACEC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAEM,cAEN,MAAMC,EAAaC,OAAOL,EAAMM,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAClC,IAAIG,EAAYL,EAEhB,GAAIA,GAAc,GAAKG,GAAa,GAAKC,GAAe,EACtDE,EAAA5B,GAAS6B,OAAOC,QAAQ,cAExB,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAaK,GAAK,EAAG,CAGxC7B,EAFsB6B,EAESJ,GAC5BK,MAAK,EAAC7B,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA5B,GAAS6B,OAAOI,QACd,qBAAqB9B,QAAeC,MACrC,IAEF8B,OAAM,EAAC/B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOC,QAAQ,oBAAoB3B,QAAeC,MAAU,IAEzEuB,GAAaF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', submitForm);\n\nfunction submitForm(e) {\n  e.preventDefault();\n\n  let {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  const inputDelay = Number(delay.value);\n  const inputStep = Number(step.value);\n  const inputAmount = Number(amount.value);\n  let delayStep = inputDelay;\n\n  if (inputDelay <= 0 || inputStep <= 0 || inputAmount <= 0) {\n    Notiflix.Notify.failure(`ERROR`);\n  } else {\n    for (let i = 1; i <= inputAmount; i += 1) {\n      let promisePosition = i;\n\n      createPromise(promisePosition, delayStep)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n      delayStep += inputStep;\n    }\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","elements","delay1","step","amount","currentTarget","inputDelay","Number","value","inputStep","inputAmount","delayStep","$parcel$interopDefault","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.679957c3.js.map"}